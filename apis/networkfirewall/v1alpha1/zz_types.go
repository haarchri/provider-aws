/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// Hack to avoid import errors during build...
var (
	_ = &metav1.Time{}
)

// +kubebuilder:skipversion
type ActionDefinition struct {
	// Stateless inspection criteria that publishes the specified metrics to Amazon
	// CloudWatch for the matching packet. This setting defines a CloudWatch dimension
	// value to be published.
	PublishMetricAction *PublishMetricAction `json:"publishMetricAction,omitempty"`
}

// +kubebuilder:skipversion
type Address struct {
	AddressDefinition *string `json:"addressDefinition,omitempty"`
}

// +kubebuilder:skipversion
type Attachment struct {
	EndpointID *string `json:"endpointID,omitempty"`

	Status *string `json:"status,omitempty"`

	SubnetID *string `json:"subnetID,omitempty"`
}

// +kubebuilder:skipversion
type CustomAction struct {
	// A custom action to use in stateless rule actions settings. This is used in
	// CustomAction.
	ActionDefinition *ActionDefinition `json:"actionDefinition,omitempty"`

	ActionName *string `json:"actionName,omitempty"`
}

// +kubebuilder:skipversion
type Dimension struct {
	Value *string `json:"value,omitempty"`
}

// +kubebuilder:skipversion
type FirewallMetadata struct {
	FirewallARN *string `json:"firewallARN,omitempty"`

	FirewallName *string `json:"firewallName,omitempty"`
}

// +kubebuilder:skipversion
type FirewallPolicyMetadata struct {
	ARN *string `json:"arn,omitempty"`

	Name *string `json:"name,omitempty"`
}

// +kubebuilder:skipversion
type FirewallPolicyResponse struct {
	Description *string `json:"description,omitempty"`

	FirewallPolicyARN *string `json:"firewallPolicyARN,omitempty"`

	FirewallPolicyID *string `json:"firewallPolicyID,omitempty"`

	FirewallPolicyName *string `json:"firewallPolicyName,omitempty"`

	FirewallPolicyStatus *string `json:"firewallPolicyStatus,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`
}

// +kubebuilder:skipversion
type FirewallPolicy_SDK struct {
	StatefulRuleGroupReferences []*StatefulRuleGroupReference `json:"statefulRuleGroupReferences,omitempty"`

	StatelessCustomActions []*CustomAction `json:"statelessCustomActions,omitempty"`

	StatelessDefaultActions []*string `json:"statelessDefaultActions,omitempty"`

	StatelessFragmentDefaultActions []*string `json:"statelessFragmentDefaultActions,omitempty"`

	StatelessRuleGroupReferences []*StatelessRuleGroupReference `json:"statelessRuleGroupReferences,omitempty"`
}

// +kubebuilder:skipversion
type FirewallStatus_SDK struct {
	ConfigurationSyncStateSummary *string `json:"configurationSyncStateSummary,omitempty"`

	Status *string `json:"status,omitempty"`

	SyncStates map[string]*SyncState `json:"syncStates,omitempty"`
}

// +kubebuilder:skipversion
type Firewall_SDK struct {
	DeleteProtection *bool `json:"deleteProtection,omitempty"`

	Description *string `json:"description,omitempty"`

	FirewallARN *string `json:"firewallARN,omitempty"`

	FirewallID *string `json:"firewallID,omitempty"`

	FirewallName *string `json:"firewallName,omitempty"`

	FirewallPolicyARN *string `json:"firewallPolicyARN,omitempty"`

	FirewallPolicyChangeProtection *bool `json:"firewallPolicyChangeProtection,omitempty"`

	SubnetChangeProtection *bool `json:"subnetChangeProtection,omitempty"`

	SubnetMappings []*SubnetMapping `json:"subnetMappings,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`

	VPCID *string `json:"vpcID,omitempty"`
}

// +kubebuilder:skipversion
type Header struct {
	Destination *string `json:"destination,omitempty"`

	DestinationPort *string `json:"destinationPort,omitempty"`

	Direction *string `json:"direction,omitempty"`

	Protocol *string `json:"protocol,omitempty"`

	Source *string `json:"source,omitempty"`

	SourcePort *string `json:"sourcePort,omitempty"`
}

// +kubebuilder:skipversion
type IPSet struct {
	Definition []*string `json:"definition,omitempty"`
}

// +kubebuilder:skipversion
type MatchAttributes struct {
	DestinationPorts []*PortRange `json:"destinationPorts,omitempty"`

	Destinations []*Address `json:"destinations,omitempty"`

	Protocols []*int64 `json:"protocols,omitempty"`

	SourcePorts []*PortRange `json:"sourcePorts,omitempty"`

	Sources []*Address `json:"sources,omitempty"`

	TCPFlags []*TCPFlagField `json:"tcpFlags,omitempty"`
}

// +kubebuilder:skipversion
type PerObjectStatus struct {
	SyncStatus *string `json:"syncStatus,omitempty"`
}

// +kubebuilder:skipversion
type PortRange struct {
	FromPort *int64 `json:"fromPort,omitempty"`

	ToPort *int64 `json:"toPort,omitempty"`
}

// +kubebuilder:skipversion
type PortSet struct {
	Definition []*string `json:"definition,omitempty"`
}

// +kubebuilder:skipversion
type PublishMetricAction struct {
	Dimensions []*Dimension `json:"dimensions,omitempty"`
}

// +kubebuilder:skipversion
type RuleDefinition struct {
	Actions []*string `json:"actions,omitempty"`
	// Criteria for Network Firewall to use to inspect an individual packet in stateless
	// rule inspection. Each match attributes set can include one or more items
	// such as IP address, CIDR range, port number, protocol, and TCP flags.
	MatchAttributes *MatchAttributes `json:"matchAttributes,omitempty"`
}

// +kubebuilder:skipversion
type RuleGroupMetadata struct {
	ARN *string `json:"arn,omitempty"`

	Name *string `json:"name,omitempty"`
}

// +kubebuilder:skipversion
type RuleGroupResponse struct {
	Capacity *int64 `json:"capacity,omitempty"`

	Description *string `json:"description,omitempty"`

	RuleGroupARN *string `json:"ruleGroupARN,omitempty"`

	RuleGroupID *string `json:"ruleGroupID,omitempty"`

	RuleGroupName *string `json:"ruleGroupName,omitempty"`

	RuleGroupStatus *string `json:"ruleGroupStatus,omitempty"`

	Tags []*Tag `json:"tags,omitempty"`

	Type *string `json:"type_,omitempty"`
}

// +kubebuilder:skipversion
type RuleGroup_SDK struct {
	// Settings that are available for use in the rules in the RuleGroup where this
	// is defined.
	RuleVariables *RuleVariables `json:"ruleVariables,omitempty"`
	// The stateless or stateful rules definitions for use in a single rule group.
	// Each rule group requires a single RulesSource. You can use an instance of
	// this for either stateless rules or stateful rules.
	RulesSource *RulesSource `json:"rulesSource,omitempty"`
}

// +kubebuilder:skipversion
type RuleOption struct {
	Keyword *string `json:"keyword,omitempty"`

	Settings []*string `json:"settings,omitempty"`
}

// +kubebuilder:skipversion
type RuleVariables struct {
	IPSets map[string]*IPSet `json:"iPSets,omitempty"`

	PortSets map[string]*PortSet `json:"portSets,omitempty"`
}

// +kubebuilder:skipversion
type RulesSource struct {
	// Stateful inspection criteria for a domain list rule group.
	RulesSourceList *RulesSourceList `json:"rulesSourceList,omitempty"`

	RulesString *string `json:"rulesString,omitempty"`

	StatefulRules []*StatefulRule `json:"statefulRules,omitempty"`
	// Stateless inspection criteria. Each stateless rule group uses exactly one
	// of these data types to define its stateless rules.
	StatelessRulesAndCustomActions *StatelessRulesAndCustomActions `json:"statelessRulesAndCustomActions,omitempty"`
}

// +kubebuilder:skipversion
type RulesSourceList struct {
	GeneratedRulesType *string `json:"generatedRulesType,omitempty"`

	TargetTypes []*string `json:"targetTypes,omitempty"`

	Targets []*string `json:"targets,omitempty"`
}

// +kubebuilder:skipversion
type StatefulRule struct {
	Action *string `json:"action,omitempty"`
	// The 5-tuple criteria for AWS Network Firewall to use to inspect packet headers
	// in stateful traffic flow inspection. Traffic flows that match the criteria
	// are a match for the corresponding StatefulRule.
	Header *Header `json:"header,omitempty"`

	RuleOptions []*RuleOption `json:"ruleOptions,omitempty"`
}

// +kubebuilder:skipversion
type StatefulRuleGroupReference struct {
	ResourceARN *string `json:"resourceARN,omitempty"`
}

// +kubebuilder:skipversion
type StatelessRule struct {
	Priority *int64 `json:"priority,omitempty"`
	// The inspection criteria and action for a single stateless rule. AWS Network
	// Firewall inspects each packet for the specified matching criteria. When a
	// packet matches the criteria, Network Firewall performs the rule's actions
	// on the packet.
	RuleDefinition *RuleDefinition `json:"ruleDefinition,omitempty"`
}

// +kubebuilder:skipversion
type StatelessRuleGroupReference struct {
	Priority *int64 `json:"priority,omitempty"`

	ResourceARN *string `json:"resourceARN,omitempty"`
}

// +kubebuilder:skipversion
type StatelessRulesAndCustomActions struct {
	CustomActions []*CustomAction `json:"customActions,omitempty"`

	StatelessRules []*StatelessRule `json:"statelessRules,omitempty"`
}

// +kubebuilder:skipversion
type SubnetMapping struct {
	SubnetID *string `json:"subnetID,omitempty"`
}

// +kubebuilder:skipversion
type SyncState struct {
	// The configuration and status for a single subnet that you've specified for
	// use by the AWS Network Firewall firewall. This is part of the FirewallStatus.
	Attachment *Attachment `json:"attachment,omitempty"`

	Config map[string]*PerObjectStatus `json:"config,omitempty"`
}

// +kubebuilder:skipversion
type TCPFlagField struct {
	Flags []*string `json:"flags,omitempty"`

	Masks []*string `json:"masks,omitempty"`
}

// +kubebuilder:skipversion
type Tag struct {
	Key *string `json:"key,omitempty"`

	Value *string `json:"value,omitempty"`
}
