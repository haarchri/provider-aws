apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: rulegroups.networkfirewall.aws.crossplane.io
spec:
  group: networkfirewall.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: RuleGroup
    listKind: RuleGroupList
    plural: rulegroups
    singular: rulegroup
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RuleGroup is the Schema for the RuleGroups API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RuleGroupSpec defines the desired state of RuleGroup
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: RuleGroupParameters defines the desired state of RuleGroup
                properties:
                  capacity:
                    description: "The maximum operating resources that this rule group
                      can use. Rule group capacity is fixed at creation. When you
                      update a rule group, you are limited to this capacity. When
                      you reference a rule group from a firewall policy, Network Firewall
                      reserves this capacity for the rule group. \n You can retrieve
                      the capacity that would be required for a rule group before
                      you create the rule group by calling CreateRuleGroup with DryRun
                      set to TRUE. \n You can't change or exceed this capacity when
                      you update the rule group, so leave room for your rule group
                      to grow. \n Capacity for a stateless rule group \n For a stateless
                      rule group, the capacity required is the sum of the capacity
                      requirements of the individual rules that you expect to have
                      in the rule group. \n To calculate the capacity requirement
                      of a single rule, multiply the capacity requirement values of
                      each of the rule's match settings: \n    * A match setting with
                      no criteria specified has a value of 1. \n    * A match setting
                      with Any specified has a value of 1. \n    * All other match
                      settings have a value equal to the number of elements    provided
                      in the setting. For example, a protocol setting [\"UDP\"] and
                      a    source setting [\"10.0.0.0/24\"] each have a value of 1.
                      A protocol setting    [\"UDP\",\"TCP\"] has a value of 2. A
                      source setting [\"10.0.0.0/24\",\"10.0.0.1/24\",\"10.0.0.2/24\"]
                      \   has a value of 3. \n A rule with no criteria specified in
                      any of its match settings has a capacity requirement of 1. A
                      rule with protocol setting [\"UDP\",\"TCP\"], source setting
                      [\"10.0.0.0/24\",\"10.0.0.1/24\",\"10.0.0.2/24\"], and a single
                      specification or no specification for each of the other match
                      settings has a capacity requirement of 6. \n Capacity for a
                      stateful rule group \n For a stateful rule group, the minimum
                      capacity required is the number of individual rules that you
                      expect to have in the rule group."
                    format: int64
                    type: integer
                  description:
                    description: A description of the rule group.
                    type: string
                  dryRun:
                    description: "Indicates whether you want Network Firewall to just
                      check the validity of the request, rather than run the request.
                      \n If set to TRUE, Network Firewall checks whether the request
                      can run successfully, but doesn't actually make the requested
                      changes. The call returns the value that the request would return
                      if you ran it with dry run set to FALSE, but doesn't make additions
                      or changes to your resources. This option allows you to make
                      sure that you have the required permissions to run the request
                      and that your request parameters are valid. \n If set to FALSE,
                      Network Firewall makes the requested changes to your resources."
                    type: boolean
                  region:
                    description: Region is which region the RuleGroup will be created.
                    type: string
                  ruleGroup:
                    description: "An object that defines the rule group rules. \n
                      You must provide either this rule group setting or a Rules setting,
                      but not both."
                    properties:
                      ruleVariables:
                        description: Settings that are available for use in the rules
                          in the RuleGroup where this is defined.
                        properties:
                          iPSets:
                            additionalProperties:
                              properties:
                                definition:
                                  items:
                                    type: string
                                  type: array
                              type: object
                            type: object
                          portSets:
                            additionalProperties:
                              properties:
                                definition:
                                  items:
                                    type: string
                                  type: array
                              type: object
                            type: object
                        type: object
                      rulesSource:
                        description: The stateless or stateful rules definitions for
                          use in a single rule group. Each rule group requires a single
                          RulesSource. You can use an instance of this for either
                          stateless rules or stateful rules.
                        properties:
                          rulesSourceList:
                            description: Stateful inspection criteria for a domain
                              list rule group.
                            properties:
                              generatedRulesType:
                                type: string
                              targetTypes:
                                items:
                                  type: string
                                type: array
                              targets:
                                items:
                                  type: string
                                type: array
                            type: object
                          rulesString:
                            type: string
                          statefulRules:
                            items:
                              properties:
                                action:
                                  type: string
                                header:
                                  description: The 5-tuple criteria for AWS Network
                                    Firewall to use to inspect packet headers in stateful
                                    traffic flow inspection. Traffic flows that match
                                    the criteria are a match for the corresponding
                                    StatefulRule.
                                  properties:
                                    destination:
                                      type: string
                                    destinationPort:
                                      type: string
                                    direction:
                                      type: string
                                    protocol:
                                      type: string
                                    source:
                                      type: string
                                    sourcePort:
                                      type: string
                                  type: object
                                ruleOptions:
                                  items:
                                    properties:
                                      keyword:
                                        type: string
                                      settings:
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                  type: array
                              type: object
                            type: array
                          statelessRulesAndCustomActions:
                            description: Stateless inspection criteria. Each stateless
                              rule group uses exactly one of these data types to define
                              its stateless rules.
                            properties:
                              customActions:
                                items:
                                  properties:
                                    actionDefinition:
                                      description: A custom action to use in stateless
                                        rule actions settings. This is used in CustomAction.
                                      properties:
                                        publishMetricAction:
                                          description: Stateless inspection criteria
                                            that publishes the specified metrics to
                                            Amazon CloudWatch for the matching packet.
                                            This setting defines a CloudWatch dimension
                                            value to be published.
                                          properties:
                                            dimensions:
                                              items:
                                                properties:
                                                  value:
                                                    type: string
                                                type: object
                                              type: array
                                          type: object
                                      type: object
                                    actionName:
                                      type: string
                                  type: object
                                type: array
                              statelessRules:
                                items:
                                  properties:
                                    priority:
                                      format: int64
                                      type: integer
                                    ruleDefinition:
                                      description: The inspection criteria and action
                                        for a single stateless rule. AWS Network Firewall
                                        inspects each packet for the specified matching
                                        criteria. When a packet matches the criteria,
                                        Network Firewall performs the rule's actions
                                        on the packet.
                                      properties:
                                        actions:
                                          items:
                                            type: string
                                          type: array
                                        matchAttributes:
                                          description: Criteria for Network Firewall
                                            to use to inspect an individual packet
                                            in stateless rule inspection. Each match
                                            attributes set can include one or more
                                            items such as IP address, CIDR range,
                                            port number, protocol, and TCP flags.
                                          properties:
                                            destinationPorts:
                                              items:
                                                properties:
                                                  fromPort:
                                                    format: int64
                                                    type: integer
                                                  toPort:
                                                    format: int64
                                                    type: integer
                                                type: object
                                              type: array
                                            destinations:
                                              items:
                                                properties:
                                                  addressDefinition:
                                                    type: string
                                                type: object
                                              type: array
                                            protocols:
                                              items:
                                                format: int64
                                                type: integer
                                              type: array
                                            sourcePorts:
                                              items:
                                                properties:
                                                  fromPort:
                                                    format: int64
                                                    type: integer
                                                  toPort:
                                                    format: int64
                                                    type: integer
                                                type: object
                                              type: array
                                            sources:
                                              items:
                                                properties:
                                                  addressDefinition:
                                                    type: string
                                                type: object
                                              type: array
                                            tcpFlags:
                                              items:
                                                properties:
                                                  flags:
                                                    items:
                                                      type: string
                                                    type: array
                                                  masks:
                                                    items:
                                                      type: string
                                                    type: array
                                                type: object
                                              type: array
                                          type: object
                                      type: object
                                  type: object
                                type: array
                            type: object
                        type: object
                    type: object
                  ruleGroupName:
                    description: The descriptive name of the rule group. You can't
                      change the name of a rule group after you create it.
                    type: string
                  rules:
                    description: "The name of a file containing stateful rule group
                      rules specifications in Suricata flat format, with one rule
                      per line. Use this to import your existing Suricata compatible
                      rule groups. \n You must provide either this rules setting or
                      a populated RuleGroup setting, but not both. \n You can provide
                      your rule group specification in a file through this setting
                      when you create or update your rule group. The call response
                      returns a RuleGroup object that Network Firewall has populated
                      from your file. Network Firewall uses the file contents to populate
                      the rule group rules, but does not maintain a reference to the
                      file or use the file in any way after performing the create
                      or update. If you call DescribeRuleGroup to retrieve the rule
                      group, Network Firewall returns rules settings inside a RuleGroup
                      object."
                    type: string
                  tags:
                    description: The key:value pairs to associate with the resource.
                    items:
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                      type: object
                    type: array
                  type_:
                    description: Indicates whether the rule group is stateless or
                      stateful. If the rule group is stateless, it contains stateless
                      rules. If it is stateful, it contains stateful rules.
                    type: string
                required:
                - capacity
                - region
                - ruleGroupName
                - type_
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: RuleGroupStatus defines the observed state of RuleGroup.
            properties:
              atProvider:
                description: RuleGroupObservation defines the observed state of RuleGroup
                properties:
                  ruleGroupResponse:
                    description: The high-level properties of a rule group. This,
                      along with the RuleGroup, define the rule group. You can retrieve
                      all objects for a rule group by calling DescribeRuleGroup.
                    properties:
                      capacity:
                        format: int64
                        type: integer
                      description:
                        type: string
                      ruleGroupARN:
                        type: string
                      ruleGroupID:
                        type: string
                      ruleGroupName:
                        type: string
                      ruleGroupStatus:
                        type: string
                      tags:
                        items:
                          properties:
                            key:
                              type: string
                            value:
                              type: string
                          type: object
                        type: array
                      type_:
                        type: string
                    type: object
                  updateToken:
                    description: "A token used for optimistic locking. Network Firewall
                      returns a token to your requests that access the rule group.
                      The token marks the state of the rule group resource at the
                      time of the request. \n To make changes to the rule group, you
                      provide the token in your request. Network Firewall uses the
                      token to ensure that the rule group hasn't changed since you
                      last retrieved it. If it has changed, the operation fails with
                      an InvalidTokenException. If this happens, retrieve the rule
                      group again to get a current copy of it with a current token.
                      Reapply your changes as needed, then try the operation again
                      using the new token."
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
